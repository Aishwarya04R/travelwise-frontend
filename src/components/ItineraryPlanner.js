import React, { useState } from 'react';
import api from '../api';
import Spinner from './Spinner';
import './ItineraryPlanner.css';

function ItineraryPlanner() {
  const [destination, setDestination] = useState('');
  const [duration, setDuration] = useState(5); // Default to 5 days
  const [itinerary, setItinerary] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');

  const handleGenerate = async (e) => {
    e.preventDefault();
    setIsLoading(true);
    setError('');
    setItinerary(null);
    try {
      const response = await api.post('/itinerary/generate', { destination, duration });
      
      // THIS IS THE FIX: The data from the backend is a JSON string.
      // We must parse it to turn it into a JavaScript object.
      const parsedData = JSON.parse(response.data);
      setItinerary(parsedData.itinerary);

    } catch (err) {
      setError('Failed to generate an itinerary. The AI may be busy or the response was not in the correct format. Please try again.');
      console.error("Error during itinerary generation:", err);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="itinerary-planner-container">
      <div className="planner-header">
        <h1>AI Itinerary Planner</h1>
        <p>Enter your destination and travel duration to get a personalized, day-by-day plan generated by our AI assistant.</p>
      </div>
      
      <form onSubmit={handleGenerate} className="planner-form">
        <input 
          type="text" 
          value={destination} 
          onChange={(e) => setDestination(e.target.value)} 
          placeholder="e.g., Paris, France" 
          required 
        />
        <input 
          type="number" 
          value={duration} 
          onChange={(e) => setDuration(e.target.value)} 
          min="1" 
          max="14" 
          required 
        />
        <button type="submit" disabled={isLoading}>
          {isLoading ? 'Generating...' : 'Generate Itinerary'}
        </button>
      </form>

      {isLoading && <Spinner />}
      {error && <p className="error-message">{error}</p>}
      
      {itinerary && (
        <div className="itinerary-results">
          <h2>Your Custom Itinerary for {destination}</h2>
          <div className="timeline">
            {itinerary.map((dayPlan, index) => (
              <div key={index} className="timeline-item">
                <div className="timeline-dot"></div>
                <div className="timeline-content">
                  <h3>{dayPlan.day}: {dayPlan.title}</h3>
                  <p>{dayPlan.description}</p>
                   <img 
                      src={`https://placehold.co/600x400/007bff/FFFFFF?text=${dayPlan.imageQuery.replace(/\s/g, '+')}`} 
                      alt={dayPlan.title} 
                      className="itinerary-image"
                   />
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}

export default ItineraryPlanner;

